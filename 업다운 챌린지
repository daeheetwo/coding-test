N, K = map(int, input().split())

A = list(map(int, input().split()))

B =[]
RealNo = []

B = A

for i in range(K):
	X, C = map(int, input().split())
		
	if(C == 1):
		for j in B:
			if j > X:
				RealNo.append(j)
		B = RealNo
		RealNo = []
	
	if(C == 0):
		for j in B:
			if j < X:
				RealNo.append(j)
		B = RealNo
		RealNo = []
				
print(len(B))
				
구름이는 명의 참가자와 함께하는 업다운 챌린지의 진행을 맡게 되었다. 업다운 챌린지는 아래 규칙에 따라 진행된다.

명의 각 참가자들은  이상  이하의 정수 중 하나를 선택한다. 선택한 수는 챌린지가 끝날 때까지 변하지 않는다.
구름이는 총 번에 걸쳐서, 수 하나와 함께 업 또는 다운을 외친다. 이는 와 로 나타낼 수 있다.
인 경우는 업을 의미한다. 이 때 선택한 수가 구름이가 외친 수 보다 큰 참가자만 살아남는다.
인 경우는 다운을 의미한다. 이 때는 선택한 수가 구름이가 외친 수 보다 작은 참가자만 살아남는다.
챌린지는 모든 참가자가 탈락하거나, 구름이가 번의 업다운을 모두 외친 뒤에 종료된다.

챌린지가 종료되었을 때, 살아남은 참가자들의 수를 구해보자.



예제 설명

참가자들의 수 목록 [1, 10, 3, 8, 5, 6, 7, 4, 9, 2] 와 첫 번째로 외친 업다운 을 생각해보자.

값이 5 초과인 참가자들을 표시하면 [1, 10, 3, 8, 5, 6, 7, 4, 9, 2] 이므로, 생존자들의 번호 목록은 [10, 8, 6, 7, 9] 이다.

이제 살아남은 참가자에 대하여 두 번째로 외친 업다운 을 생각해보자. 번호가 8 미만인 참가자는 [10, 8, 6, 7, 9] 이다.

따라서 마지막까지 살아남는 참가자들의 수 목록은 [6, 7] 이므로, 답으로 를 출력한다.



입력

첫 번째 줄에 참가자의 수 과 업다운을 외치는 횟수 가 공백을 두고 주어진다.
두 번째 줄에 번째 참가자가 선택한 수를 의미하는 가 과 같이 공백을 두고 주어진다.
세 번째 줄부터 개의 줄에 걸쳐서 구름이가 외친 업다운을 의미하는 가 공백을 두고 주어진다. 





입력으로 주어지는 모든 수는 정수이다.


출력

마지막까지 살아남은 참가자의 수를 출력한다.



입/출력 예시
:
공백
:
줄바꿈
:
탭
예시 1
입력
102
11038567492
51
80
출력
2
예시 2
입력
11
10000
100001
출력
0
예시 3
입력
11
1
10
출력
0
⋇ 입출력 형식을 잘 지켜주세요
